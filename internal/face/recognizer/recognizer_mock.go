// Code generated by MockGen. DO NOT EDIT.
// Source: ../internal/face/recognizer/recognizer.go

// Package recognizer is a generated GoMock package.
package recognizer

import (
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	reflect "reflect"
)

// MockRecognizer is a mock of Recognizer interface
type MockRecognizer struct {
	ctrl     *gomock.Controller
	recorder *MockRecognizerMockRecorder
}

// MockRecognizerMockRecorder is the mock recorder for MockRecognizer
type MockRecognizerMockRecorder struct {
	mock *MockRecognizer
}

// NewMockRecognizer creates a new mock instance
func NewMockRecognizer(ctrl *gomock.Controller) *MockRecognizer {
	mock := &MockRecognizer{ctrl: ctrl}
	mock.recorder = &MockRecognizerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRecognizer) EXPECT() *MockRecognizerMockRecorder {
	return m.recorder
}

// Recognize mocks base method
func (m *MockRecognizer) Recognize(targetFaceEncoding Encoding, peopleIDs []uuid.UUID, allFaceEncondings []Encoding) (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recognize", targetFaceEncoding, peopleIDs, allFaceEncondings)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recognize indicates an expected call of Recognize
func (mr *MockRecognizerMockRecorder) Recognize(targetFaceEncoding, peopleIDs, allFaceEncondings interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recognize", reflect.TypeOf((*MockRecognizer)(nil).Recognize), targetFaceEncoding, peopleIDs, allFaceEncondings)
}

// EncodeFace mocks base method
func (m *MockRecognizer) EncodeFace(imgBytes []byte) (Encoding, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EncodeFace", imgBytes)
	ret0, _ := ret[0].(Encoding)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EncodeFace indicates an expected call of EncodeFace
func (mr *MockRecognizerMockRecorder) EncodeFace(imgBytes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EncodeFace", reflect.TypeOf((*MockRecognizer)(nil).EncodeFace), imgBytes)
}
